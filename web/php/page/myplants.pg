{
	id: 'ContentPanel_myplants'
	,closable: true
	,style: 'padding: 5px;'
	,title: 'Meine Pflanzen'
	,layout: 'fit'
	,items: [{
		id: "plantlistgrid"
		,title: "Saisons"
		,xtype: 'grid'
		,autoExpandColumn: 'Code'
		,view: new Ext.grid.GroupingView({
			markDirty: false  
		})
		,tbar: [{
			id: 'plantlistDeletePlant'
			,text: 'Delete'
			,icon: 'img/icons/cross.png'
			,cls: 'x-btn-text-icon'
			,disabled: true
			,handler: function(){
				var grid = Ext.getCmp("plantlistgrid");
				var s = grid.getSelectionModel().getSelections();
				for(var i = 0, r; r = s[i]; i++) {
				    grid.getStore().remove(r);
				}
			}
		},{
			id: 'plantlistCheckPlantSyntax'
			,text: 'Check Syntax'
			,icon: 'img/icons/accept.png'
			,cls: 'x-btn-text-icon'
			,disabled: true
			,handler: editor.CheckSyntax.createDelegate(editor, ['plantlistgrid'], true)
		},{
			id: 'plantlistActivatePlant'
			,text: 'Activate'
			,icon: 'img/icons/award.png'
			,cls: 'x-btn-text-icon'
			,disabled: true
			,handler: function(){
				var grid = Ext.getCmp("plantlistgrid");
				var selected = grid.getSelectionModel().getSelections();
				if(selected.length > 0) {
				    editor.Activate(selected[0]);
				}
			}
		},{
			id: 'plantlistEditPlant'
			,text: 'Edit'
			,icon: 'img/icons/edit.png'
			,cls: 'x-btn-text-icon'
			,disabled: true
			,handler: function(){
				var grid = Ext.getCmp("plantlistgrid");
				var selected = grid.getSelectionModel().getSelections();
				if(selected.length > 0) {
				    editor.Edit(selected[0]);
				}
			}
		},{
			id: 'plantlistRefresh'
			,text: 'Refresh'
			,icon: 'img/icons/arrow_refresh.png'
			,cls: 'x-btn-text-icon'
			,handler: communication.GetPlantList.createDelegate(communication)
		}]
		,store: new Ext.data.GroupingStore({
			reader: new Ext.data.JsonReader({fields: Lseed.Plant})
			,sortInfo: {field: 'Name', direction: 'ASC'}
			,data: []
			,listeners: {
				add: function(sender, records, index) {
				},
				remove: function(sender, record, index) {
					editor.Delete(record);
				},
				update: function(sender, record, operation) {
					if (operation == Ext.data.Record.EDIT) {
					} else if (Ext.data.Record.REJECT) {
					} else if (Ext.data.Record.COMMIT) {
					}
				}
			}
		})
		,columns: [
			new Ext.grid.RowNumberer()
			,{
				id: 'ID'
				,header: 'ID'
				,width: 200
				,sortable: true
				,dataIndex: 'ID'
			},{
				id: 'Name'
				,header: 'Name'
				,width: 200
				,sortable: true
				,dataIndex: 'Name'
			},{
				id: 'Code'
				,header: 'Code'
				,width: 200
				,sortable: true
				,dataIndex: 'Code'
				,editor: {
					xtype: 'textfield'
					,allowBlank: true
				}
			},{
				id: 'IsActive'
				,header: 'IsActive'
				,width: 200
				,sortable: true
				,dataIndex: 'IsActive'
			}
		]
		,sm: new Ext.grid.RowSelectionModel({
			singleSelect:true
			,listeners: {
				rowselect: function() {
					Ext.getCmp("plantlistDeletePlant").enable();
					Ext.getCmp("plantlistCheckPlantSyntax").enable();
					Ext.getCmp("plantlistActivatePlant").enable();
					Ext.getCmp("plantlistEditPlant").enable();
				}
				,rowdeselect: function() {
					Ext.getCmp("plantlistDeletePlant").disable();
					Ext.getCmp("plantlistCheckPlantSyntax").disable();
					Ext.getCmp("plantlistActivatePlant").disable();
					Ext.getCmp("plantlistEditPlant").disable();
				}
			}
		})
	}]
	,listeners: {
		show: communication.GetPlantList.createDelegate(communication)
	}
}
