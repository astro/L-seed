
Knopse "" -> Zweig Stamm
Stamm "" -> Stamm "", Abzweitung "1. Gabelung" (Zweig "Ast")


Stamm :: Zweig
Ast :: Zweig

Knopse -> Stamm
Stamm -> Stamm T Ast


Informationen:
 * Teilbaum
 * Lichtmenge
 * Totale Lichtmenge
 * Länge
 * Totale Länge
 * Richtung
 * User-Tag

Ausgabe:
 * Gewichtug
 * Priorität
 * Eine Änderung
   - Zweig verlängern
   - Abzweigung einfügen (Z l -> Z l1 / Abzw / Z l2, l = l1 + l2)
 * Jeweils mit User-Tag

Semantik:
 Alle anwendbaren Regeln von höchster Priorität werden genommen, pro Stelle per Gewichtung ausgelost.
 Alle Regeln brauchen gleich lang (x), haben Kosten (C(Rule)), Gesamtanwendungsdauer: (Lichtmenge - y*Pflanzengröße)/Sum(C(Rule)) * x


Syntax:

Regel "Bei Licht Verlängern", Priorität 1, Gewicht 4:
Ast (Licht > 10, 6 < Länge < 8) => Länge := 12, Tag "Blubb"

Regel "Bei Licht Verlängern", Priorität 1, Gewicht 4:
 Zweigung
  Ast
   Knospe
  Ast 
   Zweigung
    Ast (Licht > 10, 6 < Länge < 8) => Länge := 12, Tag "Blubb"
     x
    Knospe

Regel "Langes Verzweigen", Priorität 2, Gewicht 4:
 Zweigung (-90° < Winkel < 90°)
  Ast
   Knospe
  Ast 
   Zweigung (Tag == "Hier weitermachen")
    Ast (Licht > 10, Länge == 12) => Verzweigen 50% 30° "Vorher" "Verzweigung" "Nacher"
     x
    Knospe

In Klammern: 
 * Arithmetrik
 * Vergleiche
 * Boolsche Ausdrücke
 * Variablen (Licht, Gesamtlicht, Länge, Gesamtlänge, Richtung (Radians 0..\pi), Winkel, Usertag)

Rechts:
 * UserTag 
 * Länge := Zahl
   Länge += Zahl
   Länge += Zahl%
 * Verzweige Zahl% Winkel° [Tag1 Tag2 Tag3]
